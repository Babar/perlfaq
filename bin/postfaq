#!/usr/bin/perl -w
use strict;

=head1 NAME

postfaq - post a portion of the perlfaq to a newsgroup

=head1 SYNOPSIS

postfaq [configfile]

=head1 DESCRIPTION

This script posts a portion of the perlfaq to comp.lang.perl.misc.

=head2 Configuration

This script uses these configuration directives:

	SERVER           the news server to post to
	GROUP            the group to post to
	EMAIL            the email address to use in the From field
	FAQ_DIR          the directory with split files (from splitfaq)
	POST_TEMPLATE    the Text::Template file to use
	NNTP_USER        the NNTP user (if needed)
	NNTP_PASS        the NNTP password (if needed)

This is a sample configuration file:

	SERVER news.example.com
	GROUP alt.test
	EMAIL joe@example.com
	FAQ_DIR /path/to/splits
	POST_TEMPLATE /path/to/template
	
The script checks the file specified on the command line first.
If you do not specify a file, it looks in the environment variable
POSTFAQ_CONFIG, and finally for ~/.postfaqrc.  It uses the first
configuration filename it finds.

If the file does not exist, is not a plain file, and is not 
readable, the script dies.
		
=head2 Post template

The post template, specified in the POST_TEMPLATE configuration
directive, is a Text::Template file.  The script makes available
the following variables:

	$subject   the question line of the faq 
	$body      the answer to the question
	$major     the section of the perlfaq,  (N in perlfaqN.pod)
	$minor     the number of the answer within the file

If the template file does not exist, is not a plain file, and is not 
readable, the script dies.

=head2 Errors

On any error, the script dies.  It looks for various files, and if
it does not find them, stops the script.

=head1 TO DO

* check the configuration info for all of the necessary pieces
before we start work.

* don't print error messages in non-interactive sessions

* finish the docs :)

=head1 BUGS

* none identified yet.

=head1 SEE ALSO

L<Text::Template>, the splitfaq script in the perlfaq repository

=head1 AUTHOR

brian d foy, bdfoy@cpan.org

=head1 COPYRIGHT

Copyright 2002, brian d foy

You may use and redistribute this under the same terms as
Perl itself.

=cut

use ConfigReader::Simple;
use File::Spec;
use Net::NNTP;
use Text::Template;

my $config_file = $ARGV[0] || $ENV{POSTFAQ_CONFIG} || 
	File::Spec->catfile( $ENV{HOME}, ".postfaqrc");
die "Could not open config file [$config_file]"
	unless -e $config_file && -f _ && -r _;
	
die "Could not open configuration file [$config_file]"
	unless -e $config_file && -f _ && -r _;
	
my $config    = ConfigReader::Simple->new( $config_file );
die "Could not parse config file!" unless 
	UNIVERSAL::isa( $config, 'ConfigReader::Simple' );

my $server    = $config->SERVER;	
my $newsgroup = $config->GROUP;
my $email     = $config->EMAIL;

my $dir       = $config->FAQ_DIR;
die "Could not open faq_dir [$dir]"
	unless -e $dir && -d _ && -r _;

my $template  = $config->POST_TEMPLATE;
die "Could not open template [$template]"
	unless -e $template && -f _ && -r _;
	
my $nntp_user = $config->NNTP_USER;
my $nntp_pass = $config->NNTP_PASS;
my $needs_auth = defined $nntp_user || defined $nntp_pass;

my @files = glob( File::Spec->catfile( $dir, "perlfaq*.txt" ) );

my $file = $files[rand @files];
my( $major, $minor ) = $file =~ m/perlfaq.0?([1-9]).0?(\d+)/g;

open my $fh, $file or die "Could not open FAQ $file: $!";
my $subject = <$fh>;
my @body    = <$fh>;
$subject =~ s/^\s+|\s+$//g;

close $fh;

my $message = Text::Template::fill_in_file( $template, HASH =>
	{
	subject  => $subject,
	body     => join( '', @body ),
	major    => $major,
	minor    => $minor,
	} );
	
my @message = split /$/m, $message;

my @header = (
	"Newsgroups: $newsgroup\n",
	"Subject: FAQ $major.$minor: $subject\n",
	"From: PerlFAQ Server <$email>\n",
	);

my $nntp = Net::NNTP->new( $server );
$nntp->authinfo( $nntp_user, $nntp_pass ) if $needs_auth;

$nntp->postok() or die "Posting not allowed \n";

$nntp->post( @header, "\n", @message );

$nntp->quit;
